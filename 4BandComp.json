{
  "version": "1.25.2",
  "createdWith": "Open Stage Control",
  "type": "fragment",
  "content": {
    "type": "panel",
    "top": "0%",
    "left": "0%",
    "lock": false,
    "id": "4BandComp",
    "visible": true,
    "interaction": true,
    "comments": "",
    "width": "100%",
    "height": "100%",
    "expand": "false",
    "colorText": "auto",
    "colorWidget": "auto",
    "colorStroke": "auto",
    "colorFill": "auto",
    "alphaStroke": "auto",
    "alphaFillOff": "auto",
    "alphaFillOn": "auto",
    "lineWidth": "auto",
    "borderRadius": "auto",
    "padding": 2,
    "html": "",
    "css": "",
    "colorBg": "auto",
    "layout": "vertical",
    "justify": "space-between",
    "gridTemplate": "",
    "contain": true,
    "scroll": false,
    "innerPadding": false,
    "tabsPosition": "top",
    "variables": "@{parent.variables}",
    "traversing": false,
    "value": "",
    "default": "",
    "linkId": "",
    "address": "auto",
    "preArgs": "",
    "typeTags": "",
    "decimals": 2,
    "target": "",
    "ignoreDefaults": false,
    "bypass": false,
    "onCreate": "",
    "onValue": "",
    "widgets": [
      {
        "type": "panel",
        "top": 320,
        "left": 0,
        "lock": false,
        "id": "knobs",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": "auto",
        "height": "auto",
        "expand": true,
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": 2,
        "html": "",
        "css": "",
        "colorBg": "auto",
        "layout": "grid",
        "justify": "start",
        "gridTemplate": "",
        "contain": true,
        "scroll": false,
        "innerPadding": false,
        "tabsPosition": "top",
        "variables": "@{parent.variables}",
        "traversing": false,
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "",
        "widgets": [
          {
            "type": "matrix",
            "top": "auto",
            "left": "auto",
            "lock": false,
            "id": "compAtk",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "auto",
            "height": "auto",
            "expand": true,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "atk",
            "css": ".html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 20rem;\n}",
            "colorBg": "auto",
            "layout": "horizontal",
            "justify": "start",
            "gridTemplate": "",
            "contain": true,
            "scroll": false,
            "innerPadding": false,
            "tabsPosition": "top",
            "variables": "@{parent.variables}",
            "traversing": false,
            "widgetType": "knob",
            "quantity": 4,
            "props": "JS{\n  var props = {}\n  var value = @{this} || Array(4).fill(0)\n  \n  props.design = 'solid'\n  props.dashed = true\n  props.sensitivity = 0.4\n  props.html = Math.round(value[$] * 1000) + \" ms\"\n  props.css = `.html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 14rem;\n  }`\n  \n  return props\n}",
            "value": "",
            "default": [
              0.01,
              0.01,
              0.01,
              0.01
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": true,
            "onCreate": "",
            "onValue": "send('/compAtk',value)",
            "widgets": [],
            "tabs": []
          },
          {
            "type": "matrix",
            "top": "auto",
            "left": "auto",
            "lock": false,
            "id": "compRls",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "auto",
            "height": "auto",
            "expand": true,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "rls",
            "css": ".html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 20rem;\n}",
            "colorBg": "auto",
            "layout": "horizontal",
            "justify": "start",
            "gridTemplate": "",
            "contain": true,
            "scroll": false,
            "innerPadding": false,
            "tabsPosition": "top",
            "variables": "@{parent.variables}",
            "traversing": false,
            "widgetType": "knob",
            "quantity": 4,
            "props": "JS{\n  var props = {}\n  var value = @{this} || Array(4).fill(0)\n  \n  props.design = 'solid'\n  props.dashed = true\n  props.sensitivity = 0.4\n  props.html = Math.round(value[$] * 1000) + \" ms\"\n  props.css = `.html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 14rem;\n  }`\n  \n  return props\n}",
            "value": "",
            "default": [
              0.1,
              0.1,
              0.1,
              0.1
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": true,
            "onCreate": "",
            "onValue": "send('/compRls',value)",
            "widgets": [],
            "tabs": []
          },
          {
            "type": "matrix",
            "top": "auto",
            "left": "auto",
            "lock": false,
            "id": "compRatio",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "auto",
            "height": "auto",
            "expand": true,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "ratio",
            "css": ".html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 20rem;\n}",
            "colorBg": "auto",
            "layout": "horizontal",
            "justify": "start",
            "gridTemplate": "",
            "contain": true,
            "scroll": false,
            "innerPadding": false,
            "tabsPosition": "top",
            "variables": "@{parent.variables}",
            "traversing": false,
            "widgetType": "knob",
            "quantity": 4,
            "props": "JS{\n  var props = {}\n  var value = @{this} || Array(4).fill(1/3)\n  \n  props.design = 'solid'\n  props.dashed = true\n  props.steps = 10\n  props.sensitivity = 0.4\n  \n  props.html = value[$] * 9 + 1 + \" : 1\"\n  props.css = `.html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 14rem;\n  }`\n  \n  return props\n}",
            "value": "",
            "default": "[1/3,1/3,1/3,1/3]",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": true,
            "onCreate": "",
            "onValue": "send('/compRatio',value)",
            "widgets": [],
            "tabs": []
          },
          {
            "type": "matrix",
            "top": "auto",
            "left": "auto",
            "lock": false,
            "id": "compKnee",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "auto",
            "height": "auto",
            "expand": true,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "knee",
            "css": ".html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 20rem;\n}",
            "colorBg": "auto",
            "layout": "horizontal",
            "justify": "start",
            "gridTemplate": "",
            "contain": true,
            "scroll": false,
            "innerPadding": false,
            "tabsPosition": "top",
            "variables": "@{parent.variables}",
            "traversing": false,
            "widgetType": "knob",
            "quantity": 4,
            "props": "JS{\n  var props = {}\n  var value = @{this} || Array(4).fill(0)\n  \n  props.design = 'solid'\n  props.dashed = true\n  props.sensitivity = 0.4\n  props.html = Math.round(value[$] * 100) + \" ms\"\n  props.css = `.html {\n  position: relative;\n  top: 0%;\n  text-align: center;\n  z-index: -1;\n  font-size: 14rem;\n  }`\n  \n  return props\n}",
            "value": "",
            "default": [
              0,
              0,
              0,
              0
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": true,
            "onCreate": "",
            "onValue": "send('/compKnee',value)",
            "widgets": [],
            "tabs": []
          }
        ],
        "tabs": []
      },
      {
        "type": "panel",
        "top": 10,
        "left": 40,
        "lock": false,
        "id": "sliders",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": "auto",
        "height": "auto",
        "expand": true,
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": 0,
        "html": "",
        "css": "",
        "colorBg": "auto",
        "layout": "default",
        "justify": "start",
        "gridTemplate": "",
        "contain": true,
        "scroll": false,
        "innerPadding": false,
        "tabsPosition": "top",
        "variables": "@{parent.variables}",
        "traversing": false,
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "",
        "widgets": [
          {
            "type": "canvas",
            "top": "0%",
            "left": "0%",
            "lock": false,
            "id": "compThresh",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "100%",
            "height": "45%",
            "expand": false,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "valueLength": 4,
            "autoClear": true,
            "continuous": false,
            "value": "",
            "default": [
              1,
              1,
              1,
              1
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "for (var i in value) {\n    value[i] = Math.max(0, Math.min(1, value[i]))\n}\n\nset(\"this\", value, {sync: false, send: false})",
            "onTouch": "if (event.type == \"start\") {\n    locals.x = event.offsetX / width\n    locals.y = event.offsetY / height\n    \n    var crossovers = get(\"compCrossO\")\n    locals.index = 0\n    for(var i = 0; i <= crossovers.length - 1; i ++){\n      if( locals.x >= crossovers[i]){\n        locals.index = i +1\n      }\n    }\n    \n} else {\n    locals.x += event.movementX / width\n    locals.y += event.movementY / height\n}\n\nvalue[locals.index] = 1 - locals.y\nset(\"this\", value)",
            "onDraw": "ctx.globalAlpha = cssVars.alphaFillOn\nvar pad = 1\nvar crossovers = @{compCrossO} || [0,0,0]\ncrossovers.splice(0,0,0)\ncrossovers.splice(4,0,1)\n\nfor(var i=0; i < value.length;i++){\n  var scaled = Math.log10(Math.pow(value[i],2)) * 20\n  scaled = Math.round(scaled)\n  var left = crossovers[i]\n  var sliderWidth = crossovers[i+1] - left\n    ctx.fillStyle = cssVars.colorFill\n    ctx.beginPath()\n    ctx.rect(left * width + pad,0,sliderWidth * width - pad, (1 - value[i]) * height )\n    ctx.fill()\n    ctx.fillStyle = cssVars.colorText\n    ctx.fillText(scaled + \"dB\",(left + sliderWidth/2) * width,height * 0.9)\n}",
            "onResize": ""
          },
          {
            "type": "canvas",
            "top": "45%",
            "left": "0%",
            "lock": false,
            "id": "crossOverOctaves",
            "visible": true,
            "comments": "",
            "width": "100%",
            "height": "10%",
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "z-index: -4",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "target": "",
            "onCreate": "",
            "onValue": "",
            "interaction": false,
            "typeTags": "",
            "decimals": 2,
            "ignoreDefaults": false,
            "bypass": true,
            "onTouch": "",
            "valueLength": 1,
            "autoClear": true,
            "continuous": false,
            "onDraw": "ctx.fillStyle = cssVars.colorText\nctx.strokeStyle = cssVars.colorText\nctx.globalAlpha = 1\nctx.setLineDash([8,16]);\n\nvar logScale = (20480-20) / 10\n\nfor(var i=0; i <9; i++){\n  var band = Math.pow(2,-(i+1))\n  var octave = (Math.log(band * (logScale) -1 ) / Math.log(logScale)) * width\n  ctx.beginPath()\n  ctx.moveTo(octave,0)\n  ctx.lineTo(octave,height)\n  ctx.stroke()\n  ctx.fillText(band * 20480 + \"Hz\",octave,height* 0.5)\n}",
            "onResize": ""
          },
          {
            "type": "canvas",
            "top": "45%",
            "left": "0%",
            "lock": false,
            "id": "compCrossO",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "100%",
            "height": "10%",
            "expand": false,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "valueLength": 3,
            "autoClear": true,
            "continuous": false,
            "value": "",
            "default": [
              0.26,
              0.5,
              0.75
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "set(\"this\", value)",
            "onValue": "for (var i in value) {\n    value[i] = Math.max(0, Math.min(1, value[i]))\n}\n\nset(\"this\", value, {sync: false, send: false})",
            "onTouch": "if (event.type == \"start\") {\n    locals.x = event.offsetX / width\n\n    if(locals.x >= value[2] - (value[2] - value[1]) / 2 ){\n      locals.index = 2\n    } else if(locals.x >= value[1] - (value[1] - value[0]) / 2){\n      locals.index = 1\n    } else {\n      locals.index = 0\n    }\n  \n} else {\n    locals.x += event.movementX / width\n}\n\nswitch(locals.index){\n  case 0:\n   if(locals.x >= value[1]){\n      if(locals.x >= value[2]){\n        value[2] = value[1] = value[0] = locals.x\n      } else { value[0] = value[1] = locals.x }\n    } else { value[0] = locals.x }\n    \n    break;\n  case 1:\n    if(locals.x >= value[2]){\n      value[1] = value[2] = locals.x\n    } else if(locals.x <= value[0]){\n      value[0] = value[1] = locals.x\n    } else { value[1] = locals.x }\n    \n    break\n  case 2:\n    if(locals.x <= value[1]){\n      if(locals.x <= value[0]){\n        value[2] = value[1] = value[0] = locals.x\n      } else{ value[2] = value[1] = locals.x }\n    } else { value[2] = locals.x }\n    \n    break\n}\n\nset(\"this\", value)",
            "onDraw": "ctx.fillStyle = cssVars.colorFill\nctx.strokeStyle = cssVars.colorFill\nctx.globalAlpha = 0.9\nvar radius = height * 0.2\n\nfor(var i=0;i < 3;i++){\n  ctx.beginPath()\n  ctx.arc(value[i] * width,height * 0.5,radius, 0,Math.PI * 2)\n  ctx.fill()\n  ctx.moveTo(value[i] * width,0)\n  ctx.lineTo(value[i] * width,height)\n  ctx.stroke()\n}",
            "onResize": ""
          },
          {
            "type": "canvas",
            "top": "55%",
            "left": "0%",
            "lock": false,
            "id": "compMuGain",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "100%",
            "height": "45%",
            "expand": false,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "",
            "valueLength": 4,
            "autoClear": true,
            "continuous": false,
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "for (var i in value) {\n    value[i] = Math.max(0, Math.min(1, value[i]))\n}\n\nset(\"this\", value, {sync: false, send: false})",
            "onTouch": "if (event.type == \"start\") {\n    locals.x = event.offsetX / width\n    locals.y = event.offsetY / height\n    \n    var crossovers = get(\"compCrossO\")\n    locals.index = 0\n    for(var i = 0; i <= crossovers.length - 1; i ++){\n      if( locals.x >= crossovers[i]){\n        locals.index = i +1\n      }\n    }\n    \n} else {\n    locals.x += event.movementX / width\n    locals.y += event.movementY / height\n}\n\nvalue[locals.index] = 1 - locals.y\nset(\"this\", value)",
            "onDraw": "ctx.globalAlpha = cssVars.alphaFillOn\nvar pad = 1\nvar crossovers = @{compCrossO} || [0,0,0]\ncrossovers.splice(0,0,0)\ncrossovers.splice(4,0,1)\n\nfor(var i=0; i < value.length;i++){\n  var scaled = value[i] + 1\n  scaled = Math.log10(Math.pow(scaled,2)) * 20\n  scaled = Math.round(scaled)\n  var left = crossovers[i]\n  var sliderWidth = crossovers[i+1] - left\n    ctx.fillStyle = cssVars.colorFill\n    ctx.beginPath()\n    ctx.rect(left * width + pad, height,sliderWidth * width - pad, 1 - value[i] * height )\n    ctx.fill()\n    ctx.fillStyle = cssVars.colorText\n    ctx.fillText(\"+\" + scaled + \"dB\",(left + sliderWidth/2) * width,height * 0.1)\n}",
            "onResize": ""
          }
        ],
        "tabs": []
      }
    ],
    "tabs": []
  }
}